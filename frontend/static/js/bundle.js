!function(e){var t={};function i(s){if(t[s])return t[s].exports;var r=t[s]={i:s,l:!1,exports:{}};return e[s].call(r.exports,r,r.exports,i),r.l=!0,r.exports}i.m=e,i.c=t,i.d=function(e,t,s){i.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:s})},i.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},i.t=function(e,t){if(1&t&&(e=i(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var s=Object.create(null);if(i.r(s),Object.defineProperty(s,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var r in e)i.d(s,r,function(t){return e[t]}.bind(null,r));return s},i.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return i.d(t,"a",t),t},i.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},i.p="",i(i.s=3)}([function(e,t){e.exports={BOARD_WIDTH:10,BOARD_HEIGHT:20,CELL_SIZE:30,LINES_PER_LEVEL:10,ROTATE_LEFT:-1,ROTATE_RIGHT:1,CONTROLS:{LEFT:37,RIGHT:39,DOWN:40,ROTATE_LEFT:65,ROTATE_RIGHT:83,HARD_DROP:32},POINTS:{DOWN:1,HARD_DROP:2,LINES_CLEARED:{1:100,2:300,3:500,4:800}},ANIMATION_SPEED:{1:800,2:720,3:630,4:550,5:470,6:380,7:300,8:220,9:130,10:100,11:80,12:80,13:70,14:70,15:70,16:50,17:50,18:50,19:30,20:30,21:20},CELL_COLORS:{0:"#111111",1:"#63BCE6",2:"#E6CE63",3:"#E64EC0",4:"#4EE65B",5:"#E6534E",6:"#E6A44E",7:"#4E6AE6"},PIECES:[[[0,0,0,0],[1,1,1,1],[0,0,0,0],[0,0,0,0]],[[2,2],[2,2]],[[0,3,0],[3,3,3],[0,0,0]],[[0,4,4],[4,4,0],[0,0,0]],[[5,5,0],[0,5,5],[0,0,0]],[[6,6,6],[6,0,0],[0,0,0]],[[7,7,7],[0,0,7],[0,0,0]]],SEED_PIECES:[0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,6,6,6,6]}},function(e,t){let i={};e.exports={publish:(e,t)=>{i[e]&&i[e].forEach(e=>e(t))},subscribe:(e,t)=>{i[e]?i[e].push(t):i[e]=[t];const s=i[e].length-1;return()=>{i[e].splice(s,1)}}}},function(e,t,i){const{BOARD_WIDTH:s,BOARD_HEIGHT:r}=i(0);e.exports={randomize:e=>{let t=e.length-1,i=[...e];for(;t>0;){const e=Math.floor(Math.random()*(t+1));[i[e],i[t]]=[i[t],i[e]],t--}return i},getEmptyBoard:()=>new Array(r).fill(null).map(()=>Array(s).fill(0)),getNewPlayer:(e,t,i)=>({ctx:e,board:t,id:i}),getNewPlayerDOM:(e,t)=>({selector:e,id:t})}},function(e,t,i){const s=i(4),r=i(7),{publish:a}=i(1),n=document.getElementById("p1-board"),o=document.getElementById("next-piece"),c=new s;new r({playerCtx:n.getContext("2d"),nextCtx:o.getContext("2d"),gameContainer:document.getElementById("game-container"),scoreSelector:document.getElementById("game-score"),levelSelector:document.getElementById("game-level"),linesSelector:document.getElementById("game-lines")});c.start();let l=1;a("addPlayer",l),document.addEventListener("keydown",e=>{c.command(event.which),78===event.which&&a("addPlayer",++l)})},function(e,t,i){const s=i(5),{CONTROLS:r,POINTS:a,LINES_PER_LEVEL:n,ANIMATION_SPEED:o}=i(0),{publish:c,subscribe:l}=i(1);e.exports=class{constructor(){this.gameStatus=!0,this.score=0,this.level=1,this.lines=0,this.linesRemaining=10,this.board=new s,this.time={start:0,elapsed:0},this.animationId,this.unsubDrop=l("lowerPiece",this.updateScore.bind(this)),this.unsubClear=l("clearLines",this.clearLines.bind(this)),this.unsubGame=l("gameOver",this.gameOver.bind(this))}start(){this.board.getPieces(),this.gameStatus=!0,this.animate(),c("draw",{board:this.board.grid,piece:this.board.piece,nextPiece:this.board.nextPiece}),c("updateScore",{score:this.score,level:this.level,lines:this.lines})}command(e,t){const i={[r.LEFT]:()=>this.board.movePiece(-1,0),[r.RIGHT]:()=>this.board.movePiece(1,0),[r.DOWN]:(e=a.DOWN)=>this.board.movePiece(0,1,e),[r.ROTATE_LEFT]:()=>this.board.rotatePiece(this.board.piece,-1),[r.ROTATE_RIGHT]:()=>this.board.rotatePiece(this.board.piece,1),[r.HARD_DROP]:()=>this.board.hardDrop()};e in i&&this.gameStatus&&i[e](t)}updateScore(e){this.score+=e,c("updateScore",{score:this.score})}updateLines(e){this.lines+=e,this.linesRemaining<=e&&this.level++,this.linesRemaining=n-this.lines%n,c("updateScore",{level:this.level,lines:this.lines})}clearLines(e){a.LINES_CLEARED[e]&&(this.updateScore(a.LINES_CLEARED[e]*this.level),this.updateLines(e))}gameOver(){this.unsubDrop(),this.unsubClear(),this.unsubGame(),this.gameStatus=!1,cancelAnimationFrame(this.animationId),this.animationId=void 0}animate(e=0){this.time.elapsed=e-this.time.start,this.time.elapsed>o[Math.min(this.level,21)]&&(this.time.start=e,this.command(r.DOWN,0)),this.animationId=requestAnimationFrame(this.animate.bind(this))}}},function(e,t,i){const{BOARD_WIDTH:s,BOARD_HEIGHT:r,POINTS:a}=i(0),{getEmptyBoard:n}=i(2),{pieceList:o,Piece:c}=i(6),{publish:l}=i(1);e.exports=class{constructor(){this.grid=this.createEmptyGrid(),this.piece,this.nextPiece}createEmptyGrid(){return n()}getPieces(){this.piece=this.nextPiece?this.nextPiece:new c(o.getNextPiece()),this.validMove(0,0)||l("gameOver",this.piece),this.nextPiece=new c(o.getNextPiece())}movePiece(e,t,i=a.DOWN){return this.validMove(e,t)?(this.piece.move(e,t),t>0&&l("lowerPiece",t*i),i<a.HARD_DROP&&l("draw",{board:this.grid,piece:this.piece}),!0):(t>0&&this.drop(),!1)}drop(){this.addPieceToBoard(),this.clearLines(),this.getPieces(),l("draw",{board:this.grid,piece:this.piece,nextPiece:this.nextPiece})}hardDrop(){let e=0;for(;this.validMove(0,++e);)continue;this.movePiece(0,e-1,a.HARD_DROP),this.drop()}validMove(e,t){const i=this.piece.x+e,s=this.piece.y+t;return this.piece.grid.every((e,t)=>e.every((e,r)=>0===e||this.isInBounds(i+r,s+t)&&this.isEmpty(i+r,s+t)))}isEmpty(e,t){return 0===this.grid[t][e]}isInBounds(e,t){return e>=0&&e<s&&t<r}rotatePiece(e,t){let i=JSON.parse(JSON.stringify(e.grid));for(let e=0;e<i.length;e++)for(let t=0;t<e;t++)[i[t][e],i[e][t]]=[i[e][t],i[t][e]];t>0?i.forEach(e=>e.reverse()):i.reverse(),e.update(i),l("draw",{board:this.grid,piece:this.piece})}addPieceToBoard(){const e=this.piece.x,t=this.piece.y;this.piece.grid.forEach((i,s)=>{i.forEach((i,r)=>{i>0&&(this.grid[t+s][e+r]=i)})})}clearLines(){let e=0;this.grid.forEach((t,i)=>{t.every(e=>e>0)&&(this.grid.splice(i,1),this.grid.unshift(Array(s).fill(0)),e++)}),e&&l("clearLines",e)}}},function(e,t,i){const{PIECES:s,SEED_PIECES:r,BOARD_WIDTH:a}=i(0),{randomize:n}=i(2);const o=new class{constructor(){this.pieces,this.currIdx,this.reset()}reset(){this.pieces=n(r),this.currIdx=0}getNextPiece(){const e=s[this.pieces[this.currIdx]];return this.currIdx++,this.currIdx>=this.pieces.length&&this.reset(),JSON.parse(JSON.stringify(e))}};e.exports={pieceList:o,Piece:class{constructor(e){this.grid=e,this.x=Math.floor(a/2)-Math.ceil(this.grid[0].length/2),this.y=0}move(e,t){this.x+=e,this.y+=t}update(e){this.grid=e}}}},function(e,t,i){const s=i(8),{subscribe:r}=i(1),{getEmptyBoard:a,getNewPlayer:n,getNewPlayerDOM:o}=i(2);e.exports=class{constructor(e){this.gameView=new s(e.playerCtx,e.nextCtx),this.gameContainer=e.gameContainer,this.scoreSelector=e.scoreSelector,this.levelSelector=e.levelSelector,this.linesSelector=e.linesSelector,this.players=[],this.unsubAddP=r("addPlayer",this.addPlayer.bind(this)),this.unsubRemoveP=r("removePlayer",this.removePlayer.bind(this)),this.unsubScore=r("updateScore",this.updateScoreboard.bind(this))}addPlayer(e){let t=document.createElement("div");t.id="p"+e;let i="item-large";this.players.length>=1&&(i="item-small",this.players[0].selector.classList.replace("item-large","item-small")),t.classList.add(i);let s=document.createElement("canvas");s.id=`p${e}-board`,s.classList.add("game-board");const r=s.getContext("2d");t.appendChild(s),this.gameContainer.appendChild(t);const c=o(t,e),l=n(r,a(),e);this.players.push(c),this.gameView.addPlayer(l)}removePlayer(e){const t=this.players.findIndex(t=>t.id===e);t>=0&&(this.players[t].selector.parentNode.removeChild(),this.players.splice(t,1)),1===this.players.length&&this.players[0].selector.classList.replace("item-small","item-large")}updateScoreboard(e){"score"in e&&(this.scoreSelector.innerText=e.score),"level"in e&&(this.levelSelector.innerText=e.level),"lines"in e&&(this.linesSelector.innerText=e.lines)}}},function(e,t,i){const{subscribe:s}=i(1),{CELL_COLORS:r,BOARD_WIDTH:a,BOARD_HEIGHT:n,CELL_SIZE:o}=i(0);e.exports=class{constructor(e,t){this.ctx=this.initCtx(e,o),this.ctxNext=this.initCtx(t,o,4,4),this.unsubDraw=s("draw",this.draw.bind(this)),this.unsubRemoveP=s("removePlayer",this.removePlayer.bind(this)),this.unsubUpdateP=s("updatePlayerBoard",this.updatePlayer.bind(this)),this.players=[]}initCtx(e,t,i=a,s=n){return this.scaleBoardSize(e,t,i,s),e.strokeStyle="#000000",e.lineWidth=3/t,e}draw(e){e.board&&this.drawBoard(this.ctx,e.board),e.piece&&this.drawPiece(this.ctx,e.piece,e.piece.x,e.piece.y),e.nextPiece&&this.drawNext(this.ctxNext,e.nextPiece)}drawBoard(e,t){t.forEach((t,i)=>t.forEach((t,s)=>{e.strokeRect(s,i,1,1),e.fillStyle=r[t],e.fillRect(s,i,1,1)}))}drawPiece(e,t,i,s){t.grid.forEach((t,a)=>t.forEach((t,n)=>{t>0&&(e.strokeRect(i+n,s+a,1,1),e.fillStyle=r[t],e.fillRect(i+n,s+a,1,1))}))}drawNext(e,t){e.clearRect(0,0,4,4),this.drawPiece(e,t,0,0)}scaleBoardSize(e,t,i=a,s=n){e.canvas.width=i*t,e.canvas.height=s*t,e.lineWidth=3/t,e.scale(t,t)}addPlayer(e){let t=o;this.players.length>=1&&(t/=2,this.scaleBoardSize(this.players[0].ctx,t),this.drawBoard(this.players[0].ctx,this.players[0].board)),this.players.push(e),this.initCtx(e.ctx,t),this.drawBoard(e.ctx,e.board)}removePlayer(e){const t=this.players.findIndex(t=>t.id===e);t>=0&&this.players.splice(t,1),1===this.players.length&&(this.scaleBoardSize(this.players[0].ctx,o),this.drawBoard(this.players[0].ctx,this.players[0].board))}updatePlayer(e){const t=this.players.findIndex(t=>t.id===e.id);if(t>=0){const i=this.players[t];i.board=e.board,this.drawBoard(i.ctx,i.board)}}}}]);